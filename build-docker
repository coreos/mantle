#!/bin/bash

set -e

: ${DOCKER_NAME:="mantle-builder"}
: ${GO_VERSION:="1.9.1"}
: ${REVISION:=".0"}

docker_tag="${DOCKER_NAME}:${GO_VERSION}${REVISION}"

usage () {
    echo "Usage: $(basename $0) [flags]" >&2
    echo "Option flags:" >&2
    echo "  -f --force    - Rebuild existing docker image." >&2
    echo "  -h --help     - Show this help and exit." >&2
    echo "  -p --purge    - Remove existing docker image and rebuild." >&2
    echo "Environment:" >&2
    echo "  DOCKER_NAME   - Default: '${DOCKER_NAME}'" >&2
    echo "  GO_VERSION    - Default: '${GO_VERSION}'" >&2
    echo "  REVISION      - Default: '${REVISION}'" >&2
    echo "Docker tag: ${docker_tag}" >&2
}

while [[ $# -gt 0 ]]; do
	case "${1}" in
	-h | --help | help)
		usage
		exit 0
		;;
	-f | --force | force)
		force=1
		;;
	-p | --purge | purge)
		purge=1
		;;
	*)
		usage
		exit 1
		;;
	esac
	shift
done

if [[ -n "${purge}" ]] && docker inspect --type image ${docker_tag} > /dev/null; then
	echo "removing docker image: ${docker_tag}" >&2
	docker rmi ${docker_tag}
elif [[ -z "${force}" ]] && docker inspect --type image ${docker_tag} > /dev/null; then
	echo "docker image exists: ${docker_tag}" >&2
	exit 0
fi

echo "building image: ${docker_tag}" >&2

docker build \
	--build-arg GO_VERSION=${GO_VERSION} \
	--tag ${docker_tag}\
	.
