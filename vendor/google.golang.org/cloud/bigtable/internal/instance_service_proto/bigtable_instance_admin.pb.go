// Code generated by protoc-gen-go.
// source: google.golang.org/cloud/bigtable/internal/instance_service_proto/bigtable_instance_admin.proto
// DO NOT EDIT!

/*
Package google_bigtable_admin_v2 is a generated protocol buffer package.

It is generated from these files:
	google.golang.org/cloud/bigtable/internal/instance_service_proto/bigtable_instance_admin.proto

It has these top-level messages:
	CreateInstanceRequest
	GetInstanceRequest
	ListInstancesRequest
	ListInstancesResponse
	DeleteInstanceRequest
	CreateClusterRequest
	GetClusterRequest
	ListClustersRequest
	ListClustersResponse
	DeleteClusterRequest
	CreateInstanceMetadata
*/
package google_bigtable_admin_v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/cloud/bigtable/internal/common_proto"
import google_bigtable_admin_v22 "google.golang.org/cloud/bigtable/internal/instance_data_proto"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for BigtableInstanceAdmin.CreateInstance.
type CreateInstanceRequest struct {
	Name       string                                        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	InstanceId string                                        `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	Instance   *google_bigtable_admin_v22.Instance           `protobuf:"bytes,3,opt,name=instance" json:"instance,omitempty"`
	Clusters   map[string]*google_bigtable_admin_v22.Cluster `protobuf:"bytes,4,rep,name=clusters" json:"clusters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CreateInstanceRequest) Reset()                    { *m = CreateInstanceRequest{} }
func (m *CreateInstanceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateInstanceRequest) ProtoMessage()               {}
func (*CreateInstanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateInstanceRequest) GetInstance() *google_bigtable_admin_v22.Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *CreateInstanceRequest) GetClusters() map[string]*google_bigtable_admin_v22.Cluster {
	if m != nil {
		return m.Clusters
	}
	return nil
}

// Request message for BigtableInstanceAdmin.GetInstance.
type GetInstanceRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetInstanceRequest) Reset()                    { *m = GetInstanceRequest{} }
func (m *GetInstanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetInstanceRequest) ProtoMessage()               {}
func (*GetInstanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Request message for BigtableInstanceAdmin.ListInstances.
type ListInstancesRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Locations from which Instance information could not be retrieved,
	// due to an outage or some other transient condition.
	// Instances whose Clusters are all in one of the failed locations
	// may be missing from 'instances', and Instances with at least one
	// Cluster in a failed location may only have partial information returned.
	FailedLocations []string `protobuf:"bytes,2,rep,name=failed_locations,json=failedLocations" json:"failed_locations,omitempty"`
	PageToken       string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListInstancesRequest) Reset()                    { *m = ListInstancesRequest{} }
func (m *ListInstancesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListInstancesRequest) ProtoMessage()               {}
func (*ListInstancesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// Response message for BigtableInstanceAdmin.ListInstances.
type ListInstancesResponse struct {
	Instances     []*google_bigtable_admin_v22.Instance `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
	NextPageToken string                                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListInstancesResponse) Reset()                    { *m = ListInstancesResponse{} }
func (m *ListInstancesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListInstancesResponse) ProtoMessage()               {}
func (*ListInstancesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListInstancesResponse) GetInstances() []*google_bigtable_admin_v22.Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

// Request message for BigtableInstanceAdmin.DeleteInstance.
type DeleteInstanceRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteInstanceRequest) Reset()                    { *m = DeleteInstanceRequest{} }
func (m *DeleteInstanceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteInstanceRequest) ProtoMessage()               {}
func (*DeleteInstanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// Request message for BigtableInstanceAdmin.CreateCluster.
type CreateClusterRequest struct {
	Name      string                             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ClusterId string                             `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Cluster   *google_bigtable_admin_v22.Cluster `protobuf:"bytes,3,opt,name=cluster" json:"cluster,omitempty"`
}

func (m *CreateClusterRequest) Reset()                    { *m = CreateClusterRequest{} }
func (m *CreateClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateClusterRequest) ProtoMessage()               {}
func (*CreateClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateClusterRequest) GetCluster() *google_bigtable_admin_v22.Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

// Request message for BigtableInstanceAdmin.GetCluster.
type GetClusterRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetClusterRequest) Reset()                    { *m = GetClusterRequest{} }
func (m *GetClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*GetClusterRequest) ProtoMessage()               {}
func (*GetClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// Request message for BigtableInstanceAdmin.ListClusters.
type ListClustersRequest struct {
	// Values are of the form projects/<project id>/instances/<instance id>
	// Use <instance id> = '-' to list Clusters for all Instances in a project,
	// for example "projects/myproject/instances/-"
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListClustersRequest) Reset()                    { *m = ListClustersRequest{} }
func (m *ListClustersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListClustersRequest) ProtoMessage()               {}
func (*ListClustersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

// Response message for BigtableInstanceAdmin.ListClusters.
type ListClustersResponse struct {
	Clusters []*google_bigtable_admin_v22.Cluster `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
	// Locations from which Cluster information could not be retrieved,
	// due to an outage or some other transient condition.
	// Clusters from these locations may be missing from 'clusters',
	// or may only have partial information returned.
	FailedLocations []string `protobuf:"bytes,2,rep,name=failed_locations,json=failedLocations" json:"failed_locations,omitempty"`
	NextPageToken   string   `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListClustersResponse) Reset()                    { *m = ListClustersResponse{} }
func (m *ListClustersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListClustersResponse) ProtoMessage()               {}
func (*ListClustersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListClustersResponse) GetClusters() []*google_bigtable_admin_v22.Cluster {
	if m != nil {
		return m.Clusters
	}
	return nil
}

// Request message for BigtableInstanceAdmin.DeleteCluster.
type DeleteClusterRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteClusterRequest) Reset()                    { *m = DeleteClusterRequest{} }
func (m *DeleteClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteClusterRequest) ProtoMessage()               {}
func (*DeleteClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// The metadata for the Operation returned by CreateInstance.
type CreateInstanceMetadata struct {
	// The request that prompted the initiation of this CreateInstance operation.
	OriginalRequest *CreateInstanceRequest `protobuf:"bytes,1,opt,name=original_request,json=originalRequest" json:"original_request,omitempty"`
	// The time at which the original request was received.
	RequestTime *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=request_time,json=requestTime" json:"request_time,omitempty"`
	// The time at which the operation failed or was completed successfully.
	FinishTime *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
}

func (m *CreateInstanceMetadata) Reset()                    { *m = CreateInstanceMetadata{} }
func (m *CreateInstanceMetadata) String() string            { return proto.CompactTextString(m) }
func (*CreateInstanceMetadata) ProtoMessage()               {}
func (*CreateInstanceMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CreateInstanceMetadata) GetOriginalRequest() *CreateInstanceRequest {
	if m != nil {
		return m.OriginalRequest
	}
	return nil
}

func (m *CreateInstanceMetadata) GetRequestTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.RequestTime
	}
	return nil
}

func (m *CreateInstanceMetadata) GetFinishTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.FinishTime
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateInstanceRequest)(nil), "google.bigtable.admin.v2.CreateInstanceRequest")
	proto.RegisterType((*GetInstanceRequest)(nil), "google.bigtable.admin.v2.GetInstanceRequest")
	proto.RegisterType((*ListInstancesRequest)(nil), "google.bigtable.admin.v2.ListInstancesRequest")
	proto.RegisterType((*ListInstancesResponse)(nil), "google.bigtable.admin.v2.ListInstancesResponse")
	proto.RegisterType((*DeleteInstanceRequest)(nil), "google.bigtable.admin.v2.DeleteInstanceRequest")
	proto.RegisterType((*CreateClusterRequest)(nil), "google.bigtable.admin.v2.CreateClusterRequest")
	proto.RegisterType((*GetClusterRequest)(nil), "google.bigtable.admin.v2.GetClusterRequest")
	proto.RegisterType((*ListClustersRequest)(nil), "google.bigtable.admin.v2.ListClustersRequest")
	proto.RegisterType((*ListClustersResponse)(nil), "google.bigtable.admin.v2.ListClustersResponse")
	proto.RegisterType((*DeleteClusterRequest)(nil), "google.bigtable.admin.v2.DeleteClusterRequest")
	proto.RegisterType((*CreateInstanceMetadata)(nil), "google.bigtable.admin.v2.CreateInstanceMetadata")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for BigtableInstanceAdmin service

type BigtableInstanceAdminClient interface {
	// Gets information about an instance.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	GetInstance(ctx context.Context, in *GetInstanceRequest, opts ...grpc.CallOption) (*google_bigtable_admin_v22.Instance, error)
	// Lists information about instances in a project.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	ListInstances(ctx context.Context, in *ListInstancesRequest, opts ...grpc.CallOption) (*ListInstancesResponse, error)
	// Updates an instance within a project.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	UpdateInstance(ctx context.Context, in *google_bigtable_admin_v22.Instance, opts ...grpc.CallOption) (*google_bigtable_admin_v22.Instance, error)
	// Delete an instance from a project.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	DeleteInstance(ctx context.Context, in *DeleteInstanceRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	// Gets information about a cluster.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	GetCluster(ctx context.Context, in *GetClusterRequest, opts ...grpc.CallOption) (*google_bigtable_admin_v22.Cluster, error)
	// Lists information about clusters in an instance.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	ListClusters(ctx context.Context, in *ListClustersRequest, opts ...grpc.CallOption) (*ListClustersResponse, error)
	// Deletes a cluster from an instance.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	DeleteCluster(ctx context.Context, in *DeleteClusterRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type bigtableInstanceAdminClient struct {
	cc *grpc.ClientConn
}

func NewBigtableInstanceAdminClient(cc *grpc.ClientConn) BigtableInstanceAdminClient {
	return &bigtableInstanceAdminClient{cc}
}

func (c *bigtableInstanceAdminClient) GetInstance(ctx context.Context, in *GetInstanceRequest, opts ...grpc.CallOption) (*google_bigtable_admin_v22.Instance, error) {
	out := new(google_bigtable_admin_v22.Instance)
	err := grpc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetInstance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) ListInstances(ctx context.Context, in *ListInstancesRequest, opts ...grpc.CallOption) (*ListInstancesResponse, error) {
	out := new(ListInstancesResponse)
	err := grpc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListInstances", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) UpdateInstance(ctx context.Context, in *google_bigtable_admin_v22.Instance, opts ...grpc.CallOption) (*google_bigtable_admin_v22.Instance, error) {
	out := new(google_bigtable_admin_v22.Instance)
	err := grpc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateInstance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) DeleteInstance(ctx context.Context, in *DeleteInstanceRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteInstance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) GetCluster(ctx context.Context, in *GetClusterRequest, opts ...grpc.CallOption) (*google_bigtable_admin_v22.Cluster, error) {
	out := new(google_bigtable_admin_v22.Cluster)
	err := grpc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) ListClusters(ctx context.Context, in *ListClustersRequest, opts ...grpc.CallOption) (*ListClustersResponse, error) {
	out := new(ListClustersResponse)
	err := grpc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListClusters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) DeleteCluster(ctx context.Context, in *DeleteClusterRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteCluster", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BigtableInstanceAdmin service

type BigtableInstanceAdminServer interface {
	// Gets information about an instance.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	GetInstance(context.Context, *GetInstanceRequest) (*google_bigtable_admin_v22.Instance, error)
	// Lists information about instances in a project.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	ListInstances(context.Context, *ListInstancesRequest) (*ListInstancesResponse, error)
	// Updates an instance within a project.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	UpdateInstance(context.Context, *google_bigtable_admin_v22.Instance) (*google_bigtable_admin_v22.Instance, error)
	// Delete an instance from a project.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	DeleteInstance(context.Context, *DeleteInstanceRequest) (*google_protobuf1.Empty, error)
	// Gets information about a cluster.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	GetCluster(context.Context, *GetClusterRequest) (*google_bigtable_admin_v22.Cluster, error)
	// Lists information about clusters in an instance.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	ListClusters(context.Context, *ListClustersRequest) (*ListClustersResponse, error)
	// Deletes a cluster from an instance.
	//
	// Caution: This rpc is experimental. The details can change and the rpc
	// may or may not be active.
	DeleteCluster(context.Context, *DeleteClusterRequest) (*google_protobuf1.Empty, error)
}

func RegisterBigtableInstanceAdminServer(s *grpc.Server, srv BigtableInstanceAdminServer) {
	s.RegisterService(&_BigtableInstanceAdmin_serviceDesc, srv)
}

func _BigtableInstanceAdmin_GetInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).GetInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).GetInstance(ctx, req.(*GetInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_ListInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInstancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).ListInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).ListInstances(ctx, req.(*ListInstancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_UpdateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_bigtable_admin_v22.Instance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).UpdateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).UpdateInstance(ctx, req.(*google_bigtable_admin_v22.Instance))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_DeleteInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).DeleteInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).DeleteInstance(ctx, req.(*DeleteInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).GetCluster(ctx, req.(*GetClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_ListClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).ListClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).ListClusters(ctx, req.(*ListClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_DeleteCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).DeleteCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).DeleteCluster(ctx, req.(*DeleteClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BigtableInstanceAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.bigtable.admin.v2.BigtableInstanceAdmin",
	HandlerType: (*BigtableInstanceAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInstance",
			Handler:    _BigtableInstanceAdmin_GetInstance_Handler,
		},
		{
			MethodName: "ListInstances",
			Handler:    _BigtableInstanceAdmin_ListInstances_Handler,
		},
		{
			MethodName: "UpdateInstance",
			Handler:    _BigtableInstanceAdmin_UpdateInstance_Handler,
		},
		{
			MethodName: "DeleteInstance",
			Handler:    _BigtableInstanceAdmin_DeleteInstance_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _BigtableInstanceAdmin_GetCluster_Handler,
		},
		{
			MethodName: "ListClusters",
			Handler:    _BigtableInstanceAdmin_ListClusters_Handler,
		},
		{
			MethodName: "DeleteCluster",
			Handler:    _BigtableInstanceAdmin_DeleteCluster_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() {
	proto.RegisterFile("google.golang.org/cloud/bigtable/internal/instance_service_proto/bigtable_instance_admin.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 763 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x4e, 0xd4, 0x4e,
	0x14, 0xff, 0x97, 0x85, 0xbf, 0xec, 0x59, 0x16, 0x70, 0x64, 0xc9, 0xa6, 0x6a, 0xc0, 0x5e, 0x28,
	0x8a, 0xb6, 0xc9, 0x7a, 0xa1, 0x51, 0x31, 0x0a, 0x12, 0x25, 0xc1, 0x84, 0x34, 0x78, 0x01, 0x26,
	0x34, 0xb3, 0xdb, 0xa1, 0x36, 0xb4, 0x9d, 0xb5, 0x9d, 0x25, 0x72, 0xe9, 0x8d, 0xcf, 0xe2, 0x9b,
	0xf8, 0x00, 0xbe, 0x88, 0x8f, 0xe0, 0xb4, 0x33, 0xd3, 0xdd, 0x85, 0x6e, 0xb7, 0x78, 0x45, 0xe7,
	0x7c, 0xfc, 0xce, 0xc7, 0xef, 0x9c, 0xc3, 0xc2, 0x89, 0x47, 0xa9, 0x17, 0x10, 0xd3, 0xa3, 0x01,
	0x8e, 0x3c, 0x93, 0xc6, 0x9e, 0xd5, 0x0b, 0xe8, 0xc0, 0xb5, 0xba, 0xbe, 0xc7, 0x70, 0x37, 0x20,
	0x96, 0x1f, 0x31, 0x12, 0x47, 0x38, 0xe0, 0x1f, 0x09, 0xc3, 0x51, 0x8f, 0x38, 0x09, 0x89, 0xcf,
	0x7d, 0xfe, 0xb7, 0x1f, 0x53, 0x46, 0x73, 0x43, 0x27, 0xd7, 0x63, 0x37, 0xf4, 0x23, 0x33, 0xd3,
	0xa2, 0xb6, 0xc4, 0x57, 0x56, 0xa6, 0x50, 0x9e, 0x77, 0xf4, 0x9d, 0xea, 0x91, 0x7b, 0x34, 0x0c,
	0x69, 0x24, 0xe3, 0x89, 0x87, 0x80, 0xd7, 0xf7, 0xff, 0x21, 0x7d, 0x17, 0x33, 0x2c, 0xb1, 0x94,
	0x4c, 0xa2, 0xdd, 0x16, 0x68, 0x56, 0xf6, 0xea, 0x0e, 0x4e, 0x2d, 0x12, 0xf6, 0xd9, 0x85, 0x54,
	0xae, 0x5d, 0x56, 0x32, 0x3f, 0x24, 0xdc, 0x3d, 0xec, 0x0b, 0x03, 0xe3, 0xd7, 0x0c, 0xb4, 0x76,
	0x62, 0x82, 0x19, 0xd9, 0x93, 0xb0, 0x36, 0xf9, 0x3a, 0xe0, 0x26, 0x08, 0xc1, 0x6c, 0x84, 0x43,
	0xd2, 0xd6, 0xd6, 0xb5, 0x8d, 0xba, 0x9d, 0x7d, 0xa3, 0x35, 0x68, 0xe4, 0x19, 0xf9, 0x6e, 0x7b,
	0x26, 0x53, 0x81, 0x12, 0xed, 0xb9, 0xe8, 0x35, 0xcc, 0xab, 0x57, 0xbb, 0xc6, 0xb5, 0x8d, 0x8e,
	0x61, 0x4e, 0x6a, 0xa6, 0x99, 0x47, 0xcc, 0x7d, 0xd0, 0x11, 0xcc, 0xf7, 0x82, 0x41, 0xc2, 0xab,
	0x4f, 0xda, 0xb3, 0xeb, 0x35, 0xee, 0xbf, 0x35, 0xd9, 0xbf, 0x30, 0x6f, 0x73, 0x47, 0xfa, 0xef,
	0x46, 0x2c, 0xbe, 0xb0, 0x73, 0x38, 0xfd, 0x04, 0x9a, 0x63, 0x2a, 0xb4, 0x0c, 0xb5, 0x33, 0x72,
	0x21, 0xeb, 0x4b, 0x3f, 0xd1, 0x33, 0x98, 0x3b, 0xc7, 0xc1, 0x80, 0x64, 0x85, 0x35, 0x3a, 0xf7,
	0x4a, 0x42, 0x0b, 0x24, 0x5b, 0xd8, 0xbf, 0x98, 0x79, 0xae, 0x19, 0x1b, 0x80, 0xde, 0x13, 0x56,
	0xa1, 0x8b, 0x06, 0x83, 0x95, 0x7d, 0x3f, 0xc9, 0x4d, 0x93, 0xb2, 0x8e, 0x3f, 0x84, 0xe5, 0x53,
	0xec, 0x07, 0xc4, 0x75, 0x02, 0xda, 0xc3, 0xcc, 0xa7, 0x51, 0xc2, 0xb3, 0xab, 0x71, 0xfd, 0x92,
	0x90, 0xef, 0x2b, 0x31, 0xba, 0x0b, 0xd0, 0xc7, 0x1e, 0x71, 0x18, 0x3d, 0x23, 0x51, 0xd6, 0xfd,
	0xba, 0x5d, 0x4f, 0x25, 0x87, 0xa9, 0xc0, 0xf8, 0xae, 0x41, 0xeb, 0x52, 0xd8, 0xa4, 0xcf, 0xfd,
	0x08, 0x7a, 0x03, 0x75, 0x45, 0x40, 0xc2, 0x83, 0xd7, 0x2a, 0xb2, 0x36, 0x74, 0x42, 0xf7, 0x61,
	0x29, 0x22, 0xdf, 0x98, 0x33, 0x12, 0x5f, 0xcc, 0x46, 0x33, 0x15, 0x1f, 0xe4, 0x39, 0x6c, 0x42,
	0xeb, 0x1d, 0x09, 0x48, 0xa5, 0x61, 0x33, 0x7e, 0x68, 0xb0, 0x22, 0x28, 0x56, 0xdd, 0x2e, 0xe9,
	0x13, 0x2f, 0x5e, 0x32, 0x3d, 0x1c, 0xcc, 0xba, 0x94, 0xf0, 0xb9, 0x7c, 0x09, 0x37, 0xe4, 0x43,
	0x8e, 0x65, 0x05, 0x6e, 0x95, 0x87, 0xf1, 0x00, 0x6e, 0x72, 0x66, 0xa7, 0x27, 0x61, 0x7c, 0x80,
	0x5b, 0x69, 0x87, 0xd5, 0x98, 0x4d, 0xc9, 0xf7, 0x4a, 0xb3, 0x46, 0xc8, 0xfa, 0xa9, 0x89, 0x19,
	0x19, 0x42, 0x49, 0xae, 0xb6, 0x46, 0x16, 0x44, 0x50, 0x55, 0xa1, 0x92, 0xdc, 0xe5, 0x3a, 0xe3,
	0x54, 0xc0, 0x69, 0xad, 0x88, 0xd3, 0x47, 0xb0, 0x22, 0x38, 0xad, 0xd0, 0xa0, 0x3f, 0x1a, 0xac,
	0x8e, 0x6f, 0xed, 0x47, 0xc2, 0x70, 0x7a, 0xdb, 0xd0, 0x31, 0x2c, 0xd3, 0xd8, 0xf7, 0x7c, 0x7e,
	0xf5, 0x9c, 0x58, 0x40, 0x64, 0xae, 0x8d, 0x8e, 0x75, 0xcd, 0x0b, 0x60, 0x2f, 0x29, 0x20, 0x95,
	0xca, 0x16, 0x2c, 0x48, 0x48, 0x27, 0xbd, 0x7f, 0x72, 0xbd, 0x75, 0x85, 0xab, 0x8e, 0xa3, 0x79,
	0xa8, 0x8e, 0xa3, 0xdd, 0x90, 0xf6, 0xa9, 0x84, 0x0f, 0x4f, 0xe3, 0xd4, 0x8f, 0xfc, 0xe4, 0x8b,
	0xf0, 0xae, 0x4d, 0xf5, 0x06, 0x61, 0x9e, 0x0a, 0x3a, 0xbf, 0xe7, 0xa0, 0xb5, 0x2d, 0x13, 0x57,
	0x89, 0xbe, 0x4d, 0xf3, 0x47, 0x18, 0x1a, 0x23, 0x07, 0x03, 0x3d, 0x9e, 0x5c, 0xe6, 0xd5, 0xbb,
	0xa2, 0x57, 0x58, 0x50, 0xe3, 0x3f, 0x14, 0x43, 0x73, 0x6c, 0xe5, 0x91, 0x39, 0xd9, 0xad, 0xe8,
	0x24, 0xe9, 0x56, 0x65, 0x7b, 0x31, 0x9f, 0x3c, 0xe6, 0x31, 0x2c, 0x7e, 0xea, 0xbb, 0x23, 0xb4,
	0xa0, 0x0a, 0xb9, 0x56, 0xac, 0xe7, 0x33, 0x2c, 0x8e, 0xdf, 0x0f, 0x54, 0x92, 0x60, 0xe1, 0xa5,
	0xd1, 0x57, 0xaf, 0xf0, 0xb6, 0x9b, 0xfe, 0xbf, 0xe4, 0xe0, 0x27, 0x00, 0xc3, 0x35, 0x47, 0x9b,
	0xa5, 0x74, 0x8c, 0xcf, 0xba, 0x3e, 0x7d, 0x07, 0x39, 0x3e, 0x85, 0x85, 0xd1, 0x95, 0x46, 0x4f,
	0xca, 0x7b, 0x7b, 0xe9, 0x8a, 0xe8, 0x66, 0x55, 0xf3, 0x9c, 0x89, 0x23, 0x68, 0x8e, 0x6d, 0x66,
	0x19, 0xfb, 0x45, 0x2b, 0x3c, 0xb9, 0x57, 0xdb, 0xaf, 0xe0, 0x0e, 0xff, 0x49, 0x33, 0x11, 0x6e,
	0x5b, 0x2f, 0x1c, 0xf9, 0x83, 0x14, 0xe6, 0x40, 0xeb, 0xfe, 0x9f, 0xe1, 0x3d, 0xfd, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0x67, 0x8e, 0x16, 0xfc, 0xc8, 0x09, 0x00, 0x00,
}
